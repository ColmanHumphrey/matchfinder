% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/propensity.R
\name{propensity_nonbipartite_matches}
\alias{propensity_nonbipartite_matches}
\title{Propensity match for nbp}
\usage{
propensity_nonbipartite_matches(
  x_mat,
  tolerance_list = gen_tolerance_list(),
  propensity_list = gen_propensity_list(),
  match_method = c("with_replacement", "optimal", "greedy"),
  n_sinks = 0,
  caliper_list = gen_caliper_list(),
  sqrt_mahal = TRUE,
  keep_all_with_replacement = FALSE
)
}
\arguments{
\item{x_mat}{input/design matrix (already rank-adjusted etc)}

\item{tolerance_list}{See \code{gen_tolerance_list}}

\item{propensity_list}{See \code{gen_propensity_list}}

\item{match_method}{This enum corresponds to the three matching methods
discussed above:
\describe{
  \item{"with_replacement"}{Finds smallest control for each treatment}
  \item{"greedy"}{Greedily generates pairs. Note that
  the order for choosing the greedy pairs is random, which is not the only
  possible solution.}
  \item{"optimal"}{Minimum total distance}
}}

\item{n_sinks}{how many potential matches to not bother with
NOTE: you can do this as a vector, but not for optimal matching.}

\item{caliper_list}{Optional, see \code{gen_caliper_list}. Provide
this to force matches that are close on some metric.}

\item{keep_all_with_replacement}{logical, default FALSE.
When nbp matching with replacement, you can in some cases form nearly
as many pairs as there are units (if using a tolerance vec, then maybe not
the lowest value pairs, since they'll have no control unit).
But this would form a contrast with all other methods, so we will cut
down to using half by default.}
}
\description{
Propensity match for nbp
}
